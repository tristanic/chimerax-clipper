[build-system]
requires = [
  "ChimeraX-BundleBuilder>=1.4.0",
  "ChimeraX-Core >=1.10.0, ==1.10.*",
  "ChimeraX-Atomic ~=1.60",
  "ChimeraX-AtomicLibrary ~=14.1",
  "ChimeraX-Arrays ~=1.1.0",
  "numpy~=1.26.4",
]
build-backend = "chimerax.bundle_builder.cx_pep517"

[project]
name = "ChimeraX-Clipper"
license = { text = "OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)" }
authors = [{ name = "Tristan Croll", email = "tcroll@altoslabs.com" }]
description = "Clipper: Efficient handling of volumetric data and symmetry"
dependencies = [
  "ChimeraX-Core ~=1.10.0.dev202504300222",
  "ChimeraX-Atomic ~=1.60",
  "ChimeraX-AtomicLibrary ~=14.1",
  "ChimeraX-Arrays ~=1.1.0",
]
dynamic = ["classifiers", "requires-python", "version"]

[project.readme]
content-type = "text"
text = """Provides a framework for working with crystallographic reflection data and space-group symmetry, 
and exploring the atomic-level details of models in context with their density maps."""

[project.urls]
Home = "https://github.com/tristanic/chimerax-clipper"

[tool.setuptools.dynamic]
version = { attr = "src.__version__" }

[tool.chimerax]
min-session-version = 1
max-session-version = 1
custom-init = true
categories = ["General"]
classifiers = ["Development Status :: 4 - Beta"]

[tool.chimerax.package-data]
"src/tests" = [
  "*.pdb",
  "*.mtz",
  "*.ccp4",
]
"src/docs" = [
  "*",
]

[tool.chimerax.extra-files]
"src/include" = [
  "src_cpp/include/**"
]

[[tool.chimerax.provider."data formats"]]
name = "MTZ"
category = "Structure factors"
suffixes = ".mtz"

[[tool.chimerax.provider."open command"]]
name = "MTZ"
want-path = true

[[tool.chimerax.provider."save command"]]
name = "MTZ"

[tool.chimerax.command.clipper]
category="General"
description="Command-line control of Clipper plugin for symmetry and map visualisation"

[tool.chimerax.command.cview]
category="General"
description="Re-center view on a selection, and set view mode to centerOfView with pivot indicator"

[tool.chimerax.library.mmdb2]
sources = [
  "src_cpp/deps/mmdb2/mmdb2/hybrid_36.cpp",
  "src_cpp/deps/mmdb2/mmdb2/mmdb_io_stream.cpp",
  "src_cpp/deps/mmdb2/mmdb2/mmdb_math_linalg.cpp",
  "src_cpp/deps/mmdb2/mmdb2/mmdb_symop.cpp",
  "src_cpp/deps/mmdb2/mmdb2/mmdb_atom.cpp",
  "src_cpp/deps/mmdb2/mmdb2/mmdb_machine_.cpp",
  "src_cpp/deps/mmdb2/mmdb2/mmdb_math_rand.cpp",
  "src_cpp/deps/mmdb2/mmdb2/mmdb_tables.cpp",
  "src_cpp/deps/mmdb2/mmdb2/mmdb_bondmngr.cpp",
  "src_cpp/deps/mmdb2/mmdb2/mmdb_manager.cpp",
  "src_cpp/deps/mmdb2/mmdb2/mmdb_mattype.cpp",
  "src_cpp/deps/mmdb2/mmdb2/mmdb_title.cpp",
  "src_cpp/deps/mmdb2/mmdb2/mmdb_chain.cpp",
  "src_cpp/deps/mmdb2/mmdb2/mmdb_mask.cpp",
  "src_cpp/deps/mmdb2/mmdb2/mmdb_mmcif_.cpp",
  "src_cpp/deps/mmdb2/mmdb2/mmdb_uddata.cpp",
  "src_cpp/deps/mmdb2/mmdb2/mmdb_cifdefs.cpp",
  "src_cpp/deps/mmdb2/mmdb2/mmdb_math_.cpp",
  "src_cpp/deps/mmdb2/mmdb2/mmdb_model.cpp",
  "src_cpp/deps/mmdb2/mmdb2/mmdb_utils.cpp",
  "src_cpp/deps/mmdb2/mmdb2/mmdb_coormngr.cpp",
  "src_cpp/deps/mmdb2/mmdb2/mmdb_math_align.cpp",
  "src_cpp/deps/mmdb2/mmdb2/mmdb_root.cpp",
  "src_cpp/deps/mmdb2/mmdb2/mmdb_xml_.cpp",
  "src_cpp/deps/mmdb2/mmdb2/mmdb_cryst.cpp",
  "src_cpp/deps/mmdb2/mmdb2/mmdb_math_bfgsmin.cpp",
  "src_cpp/deps/mmdb2/mmdb2/mmdb_rwbrook.cpp",
  "src_cpp/deps/mmdb2/mmdb2/mmdb_ficif.cpp",
  "src_cpp/deps/mmdb2/mmdb2/mmdb_math_fft.cpp",
  "src_cpp/deps/mmdb2/mmdb2/mmdb_selmngr.cpp",
  "src_cpp/deps/mmdb2/mmdb2/mmdb_io_file.cpp",
  "src_cpp/deps/mmdb2/mmdb2/mmdb_math_graph.cpp",
  "src_cpp/deps/mmdb2/mmdb2/mmdb_seqsuperpose.cpp",
]
define-macros = [
  "MMDB_EXPORT",
  "_CRT_SECURE_NO_WARNINGS",
]
include-modules = [
  "chimerax.core",
  "chimerax.atomic_lib",
  "chimerax.arrays",
  "chimerax.core",
]
library-modules = [
  "chimerax.core",
  "chimerax.atomic_lib",
  "chimerax.arrays",
  "chimerax.core",
]

[tool.chimerax.library.ccp4]
sources = [
  "src_cpp/deps/libccp4/ccp4/ccp4_array.c",
  "src_cpp/deps/libccp4/ccp4/cmap_data.c",
  "src_cpp/deps/libccp4/ccp4/cmtzlib.c",
  "src_cpp/deps/libccp4/ccp4/ccp4_general.c",
  "src_cpp/deps/libccp4/ccp4/cmap_header.c",
  "src_cpp/deps/libccp4/ccp4/csymlib.c",
  "src_cpp/deps/libccp4/ccp4/ccp4_parser.c",
  "src_cpp/deps/libccp4/ccp4/cmap_labels.c",
  "src_cpp/deps/libccp4/ccp4/cvecmat.c",
  "src_cpp/deps/libccp4/ccp4/ccp4_program.c",
  "src_cpp/deps/libccp4/ccp4/cmap_open.c",
  "src_cpp/deps/libccp4/ccp4/library_err.c",
  "src_cpp/deps/libccp4/ccp4/ccp4_unitcell.c",
  "src_cpp/deps/libccp4/ccp4/cmap_skew.c",
  "src_cpp/deps/libccp4/ccp4/library_file.c",
  "src_cpp/deps/libccp4/ccp4/cmap_accessor.c",
  "src_cpp/deps/libccp4/ccp4/cmap_stats.c",
  "src_cpp/deps/libccp4/ccp4/library_utils.c",
  "src_cpp/deps/libccp4/ccp4/cmap_close.c",
  "src_cpp/deps/libccp4/ccp4/cmap_symop.c",
  "src_cpp/deps/libccp4/ccp4/pack_c.c",
]

define-macros = [
  "CCP4_EXPORT",
]
include-modules = [
  "chimerax.core",
  "chimerax.atomic_lib",
  "chimerax.arrays",
  "chimerax.core",
]
library-modules = [
  "chimerax.core",
  "chimerax.atomic_lib",
  "chimerax.arrays",
  "chimerax.core",
]

[tool.chimerax.library.ccp4.platform.win]
extra-link-args = [
  "AdvAPI32.Lib",
  "UserEnv.Lib"
]
define-macros = [
  "NOMINMAX",
]

[tool.chimerax.library.clipper]
sources = [
  "src_cpp/deps/clipper/core/atomsf.cpp",
  "src_cpp/deps/clipper/core/coords.cpp",
  "src_cpp/deps/clipper/core/nxmap_operator.cpp",
  "src_cpp/deps/clipper/core/cell.cpp",
  "src_cpp/deps/clipper/core/derivs.cpp",
  "src_cpp/deps/clipper/core/ramachandran.cpp",
  "src_cpp/deps/clipper/core/clipper_instance.cpp",
  "src_cpp/deps/clipper/core/fftmap.cpp",
  "src_cpp/deps/clipper/core/resol_basisfn.cpp",
  "src_cpp/deps/clipper/core/clipper_memory.cpp",
  "src_cpp/deps/clipper/core/fftmap_sparse.cpp",
  "src_cpp/deps/clipper/core/resol_fn.cpp",
  "src_cpp/deps/clipper/core/clipper_message.cpp",
  "src_cpp/deps/clipper/core/hkl_compute.cpp",
  "src_cpp/deps/clipper/core/resol_targetfn.cpp",
  "src_cpp/deps/clipper/core/clipper_stats.cpp",
  "src_cpp/deps/clipper/core/hkl_data.cpp",
  "src_cpp/deps/clipper/core/rotation.cpp",
  "src_cpp/deps/clipper/core/clipper_test.cpp",
  "src_cpp/deps/clipper/core/hkl_datatypes.cpp",
  "src_cpp/deps/clipper/core/spacegroup.cpp",
  "src_cpp/deps/clipper/core/clipper_types.cpp",
  "src_cpp/deps/clipper/core/hkl_info.cpp",
  "src_cpp/deps/clipper/core/spacegroup_data.cpp",
  "src_cpp/deps/clipper/core/clipper_util.cpp",
  "src_cpp/deps/clipper/core/hkl_lookup.cpp",
  "src_cpp/deps/clipper/core/symop.cpp",
  "src_cpp/deps/clipper/core/container.cpp",
  "src_cpp/deps/clipper/core/hkl_operators.cpp",
  "src_cpp/deps/clipper/core/container_hkl.cpp",
  "src_cpp/deps/clipper/core/map_interp.cpp",
  "src_cpp/deps/clipper/core/container_map.cpp",
  "src_cpp/deps/clipper/core/map_utils.cpp",
  "src_cpp/deps/clipper/core/xmap.cpp",
  "src_cpp/deps/clipper/core/container_types.cpp",
  "src_cpp/deps/clipper/core/nxmap.cpp",
  "src_cpp/deps/clipper/core/clipper_thread.cpp",
  "src_cpp/deps/clipper/core/test_core.cpp",
  "src_cpp/deps/clipper/core/test_data.cpp",
  "src_cpp/deps/clipper/contrib/convolution_search.cpp",
  "src_cpp/deps/clipper/contrib/sfcalc.cpp",
  "src_cpp/deps/clipper/contrib/edcalc.cpp",
  "src_cpp/deps/clipper/contrib/sfcalc_obs.cpp",
  "src_cpp/deps/clipper/contrib/fffear.cpp",
  "src_cpp/deps/clipper/contrib/sfscale.cpp",
  "src_cpp/deps/clipper/contrib/function_object_bases.cpp",
  "src_cpp/deps/clipper/contrib/sfweight.cpp",
  "src_cpp/deps/clipper/contrib/mapfilter.cpp",
  "src_cpp/deps/clipper/contrib/skeleton.cpp",
  "src_cpp/deps/clipper/contrib/originmatch.cpp",
  "src_cpp/deps/clipper/mmdb/clipper_mmdb.cpp",
  "src_cpp/deps/clipper/minimol/minimol.cpp",
  "src_cpp/deps/clipper/minimol/container_minimol.cpp",
  "src_cpp/deps/clipper/minimol/minimol_data.cpp",
  "src_cpp/deps/clipper/minimol/minimol_io.cpp",
  "src_cpp/deps/clipper/minimol/minimol_seq.cpp",
  "src_cpp/deps/clipper/minimol/minimol_utils.cpp",
  "src_cpp/deps/clipper/phs/phs_io.cpp",
  "src_cpp/deps/clipper/cif/cif_data_io.cpp",
  "src_cpp/deps/clipper/ccp4/ccp4_mtz_types.cpp",
  "src_cpp/deps/clipper/ccp4/ccp4_mtz_io.cpp",
  "src_cpp/deps/clipper/ccp4/ccp4_map_io.cpp",
  "src_cpp/deps/clipper/ccp4/ccp4_utils.cpp",
  "src_cpp/deps/clipper/cns/cns_hkl_io.cpp",
  "src_cpp/deps/clipper/cns/cns_map_io.cpp",
]
include-dirs = [
  "src_cpp/deps/libccp4",
  "src_cpp/deps/mmdb2",
  "src_cpp/deps/clipper",
  "extern/pocketfft",
]
library-dirs = [
  "src",
]
libraries = [
  "mmdb2",
  "ccp4",
]
define-macros = [
  "CLIPPER_EXPORTS",
  "CLIPPER_VERBOSE",
]
include-modules = [
  "chimerax.core",
  "chimerax.atomic_lib",
  "chimerax.arrays",
  "chimerax.core",
]
library-modules = [
  "chimerax.core",
  "chimerax.atomic_lib",
  "chimerax.arrays",
  "chimerax.core",
]

[tool.chimerax.library.clipper.platform.win]
define-macros = [
  "NOMINMAX",
]

[tool.chimerax.library.clipper_cx]
sources = [
  "src_cpp/clipper_ext/xtal_mgr.cpp",
  "src_cpp/clipper_ext/edcalc_ext.cpp",
  "src_cpp/clipper_ext/sfcalc_obs_vdw.cpp",
]
include-dirs = [
  "src_cpp/deps",
]
library-dirs = [
  "src",
]
libraries = [
  "clipper",
  "atomstruct",
#  "atomic_lib",
  "element",
]
define-macros = [
  "CLIPPER_CX_EXPORTS",
  "CLIPPER_VERBOSE",
]
include-modules = [
  "chimerax.core",
  "chimerax.atomic_lib",
  "chimerax.arrays",
  "chimerax.core",
  "numpy",
]
library-modules = [
  "chimerax.core",
  "chimerax.atomic_lib",
  "chimerax.arrays",
  "chimerax.core",
]

[tool.chimerax.library.clipper_cx.platform.win]
extra-link-args = [
  "/FORCE:MULTIPLE",
]
define-macros = [
  "NOMINMAX",
]

[tool.chimerax.library._symmetry]
sources = [
  "src_cpp/symmetry/symmetry.cpp",
]
libraries = [
  "atomstruct",
#  "atomic_lib",
  "arrays",
  "chutil",
]
include-modules = [
  "chimerax.core",
  "chimerax.atomic_lib",
  "chimerax.arrays",
  "chimerax.core",
  "numpy",
]
library-modules = [
  "chimerax.core",
  "chimerax.atomic_lib",
  "chimerax.arrays",
  "chimerax.core",
]

[tool.chimerax.library._symmetry.platform.mac]
extra-compile-args = [
  "-fvisibility=hidden",
  "-fvisibility-inlines-hidden",
]
extra-link-args = [
  "-s",
]

[tool.chimerax.library._symmetry.platform.linux]
extra-compile-args = [
  "-fvisibility=hidden",
  "-fvisibility-inlines-hidden",
]
extra-link-args = [
  "-s",
]

[tool.chimerax.library._util]
sources = [
  "src_cpp/util/_util.cpp",
]
libraries = [
  "atomstruct",
#  "atomic_lib",
  "element",
  "chutil",
]
include-modules = [
  "chimerax.core",
  "chimerax.atomic_lib",
  "chimerax.arrays",
  "chimerax.core",
  "numpy",
]
library-modules = [
  "chimerax.core",
  "chimerax.atomic_lib",
  "chimerax.arrays",
  "chimerax.core",
]

[tool.chimerax.library._util.platform.mac]
extra-compile-args = [
  "-fvisibility=hidden",
  "-fvisibility-inlines-hidden",
]
extra-link-args = [
  "-s",
]

[tool.chimerax.library._util.platform.linux]
extra-compile-args = [
  "-fvisibility=hidden",
  "-fvisibility-inlines-hidden",
]
extra-link-args = [
  "-s",
]









[tool.chimerax.extension._map_mask]
sources = [
  "src_cpp/_maps/mask.cpp",
]
include-dirs = [
  "extern/pybind11/include",
  "src_cpp/include",
]
include-modules = [
  "chimerax.core",
  "chimerax.atomic_lib",
  "chimerax.arrays",
  "chimerax.core",
  "numpy",
]
library-modules = [
  "chimerax.core",
  "chimerax.atomic_lib",
  "chimerax.arrays",
  "chimerax.core",
]

[tool.chimerax.extension._map_mask.platform.mac]
extra-compile-args = [
  "-fvisibility=hidden",
  "-fvisibility-inlines-hidden",
]
extra-link-args = [
  "-s",
]

[tool.chimerax.extension._map_mask.platform.linux]
extra-compile-args = [
  "-fvisibility=hidden",
  "-fvisibility-inlines-hidden",
]
extra-link-args = [
  "-s",
]

[tool.chimerax.extension.contour_thread]
sources = [
  "src_cpp/contour/contour_threaded.cpp",
  "src_cpp/contour/contourdata.cpp",
]
include-dirs = [
  "extern/pybind11/include",
  "src_cpp/include",
]
include-modules = [
  "chimerax.core",
  "chimerax.atomic_lib",
  "chimerax.arrays",
  "chimerax.core",
  "numpy",
]
library-modules = [
  "chimerax.core",
  "chimerax.atomic_lib",
  "chimerax.arrays",
  "chimerax.core",
]
library-dirs = [
  "src/lib",
]

[tool.chimerax.extension.contour_thread.platform.mac]
extra-compile-args = [
  "-fvisibility=hidden",
  "-fvisibility-inlines-hidden",
]
extra-link-args = [
  "-fvisibility=hidden -fvisibility-inlines-hidden -s",
  "-fvisibility-inlines-hidden",
  "-s",
]

[tool.chimerax.extension.contour_thread.platform.linux]
extra-compile-args = [
  "-fvisibility=hidden",
  "-fvisibility-inlines-hidden",
]
extra-link-args = [
  "-fvisibility=hidden",
  "-fvisibility-inlines-hidden",
  "-s",
]

[tool.chimerax.extension.clipper_python]
sources = [
  "src_cpp/bindings/wrap_resol_fns.cpp",
  "src_cpp/bindings/ext/wrap_xtal_mgr.cpp",
  "src_cpp/bindings/contrib/wrap_skeleton.cpp",
  "src_cpp/bindings/contrib/wrap_sfweight.cpp",
  "src_cpp/bindings/contrib/wrap_sfscale.cpp",
  "src_cpp/bindings/contrib/wrap_sfcalc.cpp",
  "src_cpp/bindings/contrib/wrap_sfcalc_obs.cpp",
  "src_cpp/bindings/contrib/wrap_originmatch.cpp",
  "src_cpp/bindings/contrib/wrap_mapfilter.cpp",
  "src_cpp/bindings/contrib/wrap_fffear.cpp",
  "src_cpp/bindings/contrib/wrap_edcalc.cpp",
  "src_cpp/bindings/contrib/wrap_convolution_search.cpp",
  "src_cpp/bindings/wrap_clipper_util.cpp",
  "src_cpp/bindings/wrap_map_utils.cpp",
  "src_cpp/bindings/wrap_ccp4_mtz_io.cpp",
  "src_cpp/bindings/wrap_clipper_cif_io.cpp",
  "src_cpp/bindings/wrap_unit_cell.cpp",
  "src_cpp/bindings/wrap_symops.cpp",
  "src_cpp/bindings/wrap_spacegroup.cpp",
  "src_cpp/bindings/wrap_xmap.cpp",
  "src_cpp/bindings/wrap_nxmap.cpp",
  "src_cpp/bindings/wrap_nxmap_operator.cpp",
  "src_cpp/bindings/wrap_hkl_datatypes.cpp",
  "src_cpp/bindings/wrap_hkl_data.cpp",
  "src_cpp/bindings/wrap_derivs.cpp",
  "src_cpp/bindings/wrap_coords.cpp",
  "src_cpp/bindings/wrap_clipper_stats.cpp",
  "src_cpp/bindings/wrap_cell.cpp",
  "src_cpp/bindings/wrap_atomsf.cpp",
  "src_cpp/bindings/wrap_symop.cpp",
  "src_cpp/bindings/wrap_clipper_types.cpp",
  "src_cpp/bindings/wrap_hkl_info.cpp",
  "src_cpp/bindings/wrap_containers.cpp",
  "src_cpp/bindings/clipper_pybind11.cpp",
]
include-dirs = [
  "extern/pybind11/include",
  "src_cpp/deps",
  "src_cpp/deps/libccp4",
  "src_cpp/deps/mmdb2",
  "src",
  "src_cpp/include",
]
library-dirs = [
  "src",
  "src_cpp/lib",
]
libraries = [
  "clipper",
  "clipper_cx",
  "atomstruct",
#  "atomic_lib",
  "chutil",
  "element",
]
define-macros = [
  "CLIPPER_VERBOSE",
]
include-modules = [
  "chimerax.core",
  "chimerax.atomic_lib",
  "chimerax.arrays",
  "chimerax.core",
  "numpy",
]
library-modules = [
  "chimerax.core",
  "chimerax.atomic_lib",
  "chimerax.arrays",
  "chimerax.core",
]

[tool.chimerax.extension.clipper_python.platform.win]
extra-link-args = [
  "/FORCE:MULTIPLE",
]
define-macros = [
  "NOMINMAX",
]

[tool.chimerax.extension.clipper_python.platform.mac]
extra-compile-args = [
  "-fvisibility=hidden",
  "-fvisibility-inlines-hidden",
]
extra-link-args = [
  "-fvisibility=hidden -fvisibility-inlines-hidden -s",
  "-fvisibility-inlines-hidden",
  "-s",
]

[tool.chimerax.extension.clipper_python.platform.linux]
extra-compile-args = [
  "-fvisibility=hidden",
  "-fvisibility-inlines-hidden",
]
extra-link-args = [
  "-fvisibility=hidden",
  "-fvisibility-inlines-hidden",
  "-s",
]

