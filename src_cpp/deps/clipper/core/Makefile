# Makefile.in generated by automake 1.13.4 from Makefile.am.
# clipper/core/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Copyright 2003
# For licence conditions, see the file COPYING in the distribution



am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/clipper
pkgincludedir = $(includedir)/clipper
pkglibdir = $(libdir)/clipper
pkglibexecdir = $(libexecdir)/clipper
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-apple-darwin16.7.0
host_triplet = x86_64-apple-darwin16.7.0
subdir = clipper/core
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/build-aux/depcomp $(library_include_HEADERS)
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_pthread.m4 \
	$(top_srcdir)/m4/fftw.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(library_includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
libclipper_core_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_libclipper_core_la_OBJECTS = libclipper_core_la-atomsf.lo \
	libclipper_core_la-coords.lo \
	libclipper_core_la-nxmap_operator.lo \
	libclipper_core_la-cell.lo libclipper_core_la-derivs.lo \
	libclipper_core_la-ramachandran.lo \
	libclipper_core_la-clipper_instance.lo \
	libclipper_core_la-fftmap.lo \
	libclipper_core_la-resol_basisfn.lo \
	libclipper_core_la-clipper_memory.lo \
	libclipper_core_la-fftmap_sparse.lo \
	libclipper_core_la-resol_fn.lo \
	libclipper_core_la-clipper_message.lo \
	libclipper_core_la-hkl_compute.lo \
	libclipper_core_la-resol_targetfn.lo \
	libclipper_core_la-clipper_stats.lo \
	libclipper_core_la-hkl_data.lo libclipper_core_la-rotation.lo \
	libclipper_core_la-clipper_test.lo \
	libclipper_core_la-hkl_datatypes.lo \
	libclipper_core_la-spacegroup.lo \
	libclipper_core_la-clipper_types.lo \
	libclipper_core_la-hkl_info.lo \
	libclipper_core_la-spacegroup_data.lo \
	libclipper_core_la-clipper_util.lo \
	libclipper_core_la-hkl_lookup.lo libclipper_core_la-symop.lo \
	libclipper_core_la-container.lo \
	libclipper_core_la-hkl_operators.lo \
	libclipper_core_la-container_hkl.lo \
	libclipper_core_la-map_interp.lo \
	libclipper_core_la-container_map.lo \
	libclipper_core_la-map_utils.lo libclipper_core_la-xmap.lo \
	libclipper_core_la-container_types.lo \
	libclipper_core_la-nxmap.lo \
	libclipper_core_la-clipper_thread.lo \
	libclipper_core_la-test_core.lo \
	libclipper_core_la-test_data.lo
libclipper_core_la_OBJECTS = $(am_libclipper_core_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libclipper_core_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(libclipper_core_la_LDFLAGS) \
	$(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libclipper_core_la_SOURCES)
DIST_SOURCES = $(libclipper_core_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(library_include_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/tic20/clipper-python/src/clipper/build-aux/missing aclocal-1.13
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} /Users/tic20/clipper-python/src/clipper/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /Users/tic20/clipper-python/src/clipper/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /Users/tic20/clipper-python/src/clipper/build-aux/missing automake-1.13
AWK = awk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CLIPPER_LIBS = -lclipper-ccp4 -lclipper-cif -lclipper-minimol -lclipper-mmdb -lclipper-cns -lclipper-phs -lclipper-contrib -lclipper-core
CLIPPER_REQUIRES = libccp4c mmdb2
CPP = gcc -E
CPPFLAGS = -I/Users/tic20/clipper-python/builds/build_py36_macos/src/clipper_python/include
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -DFFTW_MKL -O3 -std=c++11
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = dsymutil
DUMPBIN = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
F77 = 
FFLAGS = 
FFTW2_LIBS = -lfftw2xc
FGREP = /usr/bin/grep -F
FLIBS = 
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld
LDFLAGS = -L/Users/tic20/clipper-python/builds/build_py36_macos/src/clipper_python/lib
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = lipo
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAKEINFO = ${SHELL} /Users/tic20/clipper-python/src/clipper/build-aux/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = ../../build-aux/install-sh -c -d
NM = /usr/bin/nm -B
NMEDIT = nmedit
OBJDUMP = objdump
OBJEXT = o
OTOOL = otool
OTOOL64 = :
PACKAGE = clipper
PACKAGE_BUGREPORT = 
PACKAGE_NAME = clipper
PACKAGE_STRING = clipper 2.1
PACKAGE_TARNAME = clipper
PACKAGE_URL = 
PACKAGE_VERSION = 2.1
PATH_SEPARATOR = :
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -D_THREAD_SAFE -pthread
PTHREAD_LIBS = 
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 2.1
VERSION_INFO = -version-info 2:1
abs_builddir = /Users/tic20/clipper-python/src/clipper/clipper/core
abs_srcdir = /Users/tic20/clipper-python/src/clipper/clipper/core
abs_top_builddir = /Users/tic20/clipper-python/src/clipper
abs_top_srcdir = /Users/tic20/clipper-python/src/clipper
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
ac_ct_F77 = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
ax_pthread_config = 
bindir = ${exec_prefix}/bin
build = x86_64-apple-darwin16.7.0
build_alias = 
build_cpu = x86_64
build_os = darwin16.7.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-apple-darwin16.7.0
host_alias = 
host_cpu = x86_64
host_os = darwin16.7.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/tic20/clipper-python/src/clipper/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /Users/tic20/clipper-python/builds/build_py36_macos/src/clipper_python
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
lib_LTLIBRARIES = libclipper-core.la
libclipper_core_la_LDFLAGS = -version-info 2:1
libclipper_core_la_LIBADD = $(FFTW2_LIBS) $(PTHREAD_LIBS)
libclipper_core_la_CPPFLAGS = $(PTHREAD_CFLAGS)
libclipper_core_la_SOURCES = \
atomsf.cpp              coords.cpp              nxmap_operator.cpp \
cell.cpp                derivs.cpp              ramachandran.cpp \
clipper_instance.cpp    fftmap.cpp              resol_basisfn.cpp \
clipper_memory.cpp      fftmap_sparse.cpp       resol_fn.cpp \
clipper_message.cpp     hkl_compute.cpp         resol_targetfn.cpp \
clipper_stats.cpp       hkl_data.cpp            rotation.cpp \
clipper_test.cpp        hkl_datatypes.cpp       spacegroup.cpp \
clipper_types.cpp       hkl_info.cpp            spacegroup_data.cpp \
clipper_util.cpp        hkl_lookup.cpp          symop.cpp \
container.cpp           hkl_operators.cpp       container_hkl.cpp \
map_interp.cpp          container_map.cpp       map_utils.cpp \
xmap.cpp                container_types.cpp     nxmap.cpp \
clipper_thread.cpp      test_core.cpp           test_data.cpp

library_includedir = $(pkgincludedir)/core
library_include_HEADERS = \
atomsf.h                container_types.h       nxmap_operator.h \
cell.h                  coords.h                ramachandran.h \
clipper_instance.h      derivs.h                resol_basisfn.h \
clipper_memory.h        fftmap.h                resol_fn.h \
clipper_message.h       fftmap_sparse.h         resol_targetfn.h \
clipper_precision.h     hkl_compute.h           rotation.h \
clipper_stats.h         hkl_data.h              spacegroup.h \
clipper_sysdep.h        hkl_datatypes.h         spacegroup_data.h \
clipper_test.h          hkl_info.h              symop.h \
clipper_types.h         hkl_lookup.h            clipper_util.h \
hkl_operators.h         container.h             map_interp.h \
xmap.h                  container_hkl.h         map_utils.h \
container_map.h         nxmap.h                 clipper_thread.h \
test_core.h             test_data.h

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign clipper/core/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign clipper/core/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libclipper-core.la: $(libclipper_core_la_OBJECTS) $(libclipper_core_la_DEPENDENCIES) $(EXTRA_libclipper_core_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libclipper_core_la_LINK) -rpath $(libdir) $(libclipper_core_la_OBJECTS) $(libclipper_core_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libclipper_core_la-atomsf.Plo
include ./$(DEPDIR)/libclipper_core_la-cell.Plo
include ./$(DEPDIR)/libclipper_core_la-clipper_instance.Plo
include ./$(DEPDIR)/libclipper_core_la-clipper_memory.Plo
include ./$(DEPDIR)/libclipper_core_la-clipper_message.Plo
include ./$(DEPDIR)/libclipper_core_la-clipper_stats.Plo
include ./$(DEPDIR)/libclipper_core_la-clipper_test.Plo
include ./$(DEPDIR)/libclipper_core_la-clipper_thread.Plo
include ./$(DEPDIR)/libclipper_core_la-clipper_types.Plo
include ./$(DEPDIR)/libclipper_core_la-clipper_util.Plo
include ./$(DEPDIR)/libclipper_core_la-container.Plo
include ./$(DEPDIR)/libclipper_core_la-container_hkl.Plo
include ./$(DEPDIR)/libclipper_core_la-container_map.Plo
include ./$(DEPDIR)/libclipper_core_la-container_types.Plo
include ./$(DEPDIR)/libclipper_core_la-coords.Plo
include ./$(DEPDIR)/libclipper_core_la-derivs.Plo
include ./$(DEPDIR)/libclipper_core_la-fftmap.Plo
include ./$(DEPDIR)/libclipper_core_la-fftmap_sparse.Plo
include ./$(DEPDIR)/libclipper_core_la-hkl_compute.Plo
include ./$(DEPDIR)/libclipper_core_la-hkl_data.Plo
include ./$(DEPDIR)/libclipper_core_la-hkl_datatypes.Plo
include ./$(DEPDIR)/libclipper_core_la-hkl_info.Plo
include ./$(DEPDIR)/libclipper_core_la-hkl_lookup.Plo
include ./$(DEPDIR)/libclipper_core_la-hkl_operators.Plo
include ./$(DEPDIR)/libclipper_core_la-map_interp.Plo
include ./$(DEPDIR)/libclipper_core_la-map_utils.Plo
include ./$(DEPDIR)/libclipper_core_la-nxmap.Plo
include ./$(DEPDIR)/libclipper_core_la-nxmap_operator.Plo
include ./$(DEPDIR)/libclipper_core_la-ramachandran.Plo
include ./$(DEPDIR)/libclipper_core_la-resol_basisfn.Plo
include ./$(DEPDIR)/libclipper_core_la-resol_fn.Plo
include ./$(DEPDIR)/libclipper_core_la-resol_targetfn.Plo
include ./$(DEPDIR)/libclipper_core_la-rotation.Plo
include ./$(DEPDIR)/libclipper_core_la-spacegroup.Plo
include ./$(DEPDIR)/libclipper_core_la-spacegroup_data.Plo
include ./$(DEPDIR)/libclipper_core_la-symop.Plo
include ./$(DEPDIR)/libclipper_core_la-test_core.Plo
include ./$(DEPDIR)/libclipper_core_la-test_data.Plo
include ./$(DEPDIR)/libclipper_core_la-xmap.Plo

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

libclipper_core_la-atomsf.lo: atomsf.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libclipper_core_la-atomsf.lo -MD -MP -MF $(DEPDIR)/libclipper_core_la-atomsf.Tpo -c -o libclipper_core_la-atomsf.lo `test -f 'atomsf.cpp' || echo '$(srcdir)/'`atomsf.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libclipper_core_la-atomsf.Tpo $(DEPDIR)/libclipper_core_la-atomsf.Plo
#	$(AM_V_CXX)source='atomsf.cpp' object='libclipper_core_la-atomsf.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libclipper_core_la-atomsf.lo `test -f 'atomsf.cpp' || echo '$(srcdir)/'`atomsf.cpp

libclipper_core_la-coords.lo: coords.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libclipper_core_la-coords.lo -MD -MP -MF $(DEPDIR)/libclipper_core_la-coords.Tpo -c -o libclipper_core_la-coords.lo `test -f 'coords.cpp' || echo '$(srcdir)/'`coords.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libclipper_core_la-coords.Tpo $(DEPDIR)/libclipper_core_la-coords.Plo
#	$(AM_V_CXX)source='coords.cpp' object='libclipper_core_la-coords.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libclipper_core_la-coords.lo `test -f 'coords.cpp' || echo '$(srcdir)/'`coords.cpp

libclipper_core_la-nxmap_operator.lo: nxmap_operator.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libclipper_core_la-nxmap_operator.lo -MD -MP -MF $(DEPDIR)/libclipper_core_la-nxmap_operator.Tpo -c -o libclipper_core_la-nxmap_operator.lo `test -f 'nxmap_operator.cpp' || echo '$(srcdir)/'`nxmap_operator.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libclipper_core_la-nxmap_operator.Tpo $(DEPDIR)/libclipper_core_la-nxmap_operator.Plo
#	$(AM_V_CXX)source='nxmap_operator.cpp' object='libclipper_core_la-nxmap_operator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libclipper_core_la-nxmap_operator.lo `test -f 'nxmap_operator.cpp' || echo '$(srcdir)/'`nxmap_operator.cpp

libclipper_core_la-cell.lo: cell.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libclipper_core_la-cell.lo -MD -MP -MF $(DEPDIR)/libclipper_core_la-cell.Tpo -c -o libclipper_core_la-cell.lo `test -f 'cell.cpp' || echo '$(srcdir)/'`cell.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libclipper_core_la-cell.Tpo $(DEPDIR)/libclipper_core_la-cell.Plo
#	$(AM_V_CXX)source='cell.cpp' object='libclipper_core_la-cell.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libclipper_core_la-cell.lo `test -f 'cell.cpp' || echo '$(srcdir)/'`cell.cpp

libclipper_core_la-derivs.lo: derivs.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libclipper_core_la-derivs.lo -MD -MP -MF $(DEPDIR)/libclipper_core_la-derivs.Tpo -c -o libclipper_core_la-derivs.lo `test -f 'derivs.cpp' || echo '$(srcdir)/'`derivs.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libclipper_core_la-derivs.Tpo $(DEPDIR)/libclipper_core_la-derivs.Plo
#	$(AM_V_CXX)source='derivs.cpp' object='libclipper_core_la-derivs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libclipper_core_la-derivs.lo `test -f 'derivs.cpp' || echo '$(srcdir)/'`derivs.cpp

libclipper_core_la-ramachandran.lo: ramachandran.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libclipper_core_la-ramachandran.lo -MD -MP -MF $(DEPDIR)/libclipper_core_la-ramachandran.Tpo -c -o libclipper_core_la-ramachandran.lo `test -f 'ramachandran.cpp' || echo '$(srcdir)/'`ramachandran.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libclipper_core_la-ramachandran.Tpo $(DEPDIR)/libclipper_core_la-ramachandran.Plo
#	$(AM_V_CXX)source='ramachandran.cpp' object='libclipper_core_la-ramachandran.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libclipper_core_la-ramachandran.lo `test -f 'ramachandran.cpp' || echo '$(srcdir)/'`ramachandran.cpp

libclipper_core_la-clipper_instance.lo: clipper_instance.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libclipper_core_la-clipper_instance.lo -MD -MP -MF $(DEPDIR)/libclipper_core_la-clipper_instance.Tpo -c -o libclipper_core_la-clipper_instance.lo `test -f 'clipper_instance.cpp' || echo '$(srcdir)/'`clipper_instance.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libclipper_core_la-clipper_instance.Tpo $(DEPDIR)/libclipper_core_la-clipper_instance.Plo
#	$(AM_V_CXX)source='clipper_instance.cpp' object='libclipper_core_la-clipper_instance.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libclipper_core_la-clipper_instance.lo `test -f 'clipper_instance.cpp' || echo '$(srcdir)/'`clipper_instance.cpp

libclipper_core_la-fftmap.lo: fftmap.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libclipper_core_la-fftmap.lo -MD -MP -MF $(DEPDIR)/libclipper_core_la-fftmap.Tpo -c -o libclipper_core_la-fftmap.lo `test -f 'fftmap.cpp' || echo '$(srcdir)/'`fftmap.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libclipper_core_la-fftmap.Tpo $(DEPDIR)/libclipper_core_la-fftmap.Plo
#	$(AM_V_CXX)source='fftmap.cpp' object='libclipper_core_la-fftmap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libclipper_core_la-fftmap.lo `test -f 'fftmap.cpp' || echo '$(srcdir)/'`fftmap.cpp

libclipper_core_la-resol_basisfn.lo: resol_basisfn.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libclipper_core_la-resol_basisfn.lo -MD -MP -MF $(DEPDIR)/libclipper_core_la-resol_basisfn.Tpo -c -o libclipper_core_la-resol_basisfn.lo `test -f 'resol_basisfn.cpp' || echo '$(srcdir)/'`resol_basisfn.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libclipper_core_la-resol_basisfn.Tpo $(DEPDIR)/libclipper_core_la-resol_basisfn.Plo
#	$(AM_V_CXX)source='resol_basisfn.cpp' object='libclipper_core_la-resol_basisfn.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libclipper_core_la-resol_basisfn.lo `test -f 'resol_basisfn.cpp' || echo '$(srcdir)/'`resol_basisfn.cpp

libclipper_core_la-clipper_memory.lo: clipper_memory.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libclipper_core_la-clipper_memory.lo -MD -MP -MF $(DEPDIR)/libclipper_core_la-clipper_memory.Tpo -c -o libclipper_core_la-clipper_memory.lo `test -f 'clipper_memory.cpp' || echo '$(srcdir)/'`clipper_memory.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libclipper_core_la-clipper_memory.Tpo $(DEPDIR)/libclipper_core_la-clipper_memory.Plo
#	$(AM_V_CXX)source='clipper_memory.cpp' object='libclipper_core_la-clipper_memory.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libclipper_core_la-clipper_memory.lo `test -f 'clipper_memory.cpp' || echo '$(srcdir)/'`clipper_memory.cpp

libclipper_core_la-fftmap_sparse.lo: fftmap_sparse.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libclipper_core_la-fftmap_sparse.lo -MD -MP -MF $(DEPDIR)/libclipper_core_la-fftmap_sparse.Tpo -c -o libclipper_core_la-fftmap_sparse.lo `test -f 'fftmap_sparse.cpp' || echo '$(srcdir)/'`fftmap_sparse.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libclipper_core_la-fftmap_sparse.Tpo $(DEPDIR)/libclipper_core_la-fftmap_sparse.Plo
#	$(AM_V_CXX)source='fftmap_sparse.cpp' object='libclipper_core_la-fftmap_sparse.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libclipper_core_la-fftmap_sparse.lo `test -f 'fftmap_sparse.cpp' || echo '$(srcdir)/'`fftmap_sparse.cpp

libclipper_core_la-resol_fn.lo: resol_fn.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libclipper_core_la-resol_fn.lo -MD -MP -MF $(DEPDIR)/libclipper_core_la-resol_fn.Tpo -c -o libclipper_core_la-resol_fn.lo `test -f 'resol_fn.cpp' || echo '$(srcdir)/'`resol_fn.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libclipper_core_la-resol_fn.Tpo $(DEPDIR)/libclipper_core_la-resol_fn.Plo
#	$(AM_V_CXX)source='resol_fn.cpp' object='libclipper_core_la-resol_fn.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libclipper_core_la-resol_fn.lo `test -f 'resol_fn.cpp' || echo '$(srcdir)/'`resol_fn.cpp

libclipper_core_la-clipper_message.lo: clipper_message.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libclipper_core_la-clipper_message.lo -MD -MP -MF $(DEPDIR)/libclipper_core_la-clipper_message.Tpo -c -o libclipper_core_la-clipper_message.lo `test -f 'clipper_message.cpp' || echo '$(srcdir)/'`clipper_message.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libclipper_core_la-clipper_message.Tpo $(DEPDIR)/libclipper_core_la-clipper_message.Plo
#	$(AM_V_CXX)source='clipper_message.cpp' object='libclipper_core_la-clipper_message.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libclipper_core_la-clipper_message.lo `test -f 'clipper_message.cpp' || echo '$(srcdir)/'`clipper_message.cpp

libclipper_core_la-hkl_compute.lo: hkl_compute.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libclipper_core_la-hkl_compute.lo -MD -MP -MF $(DEPDIR)/libclipper_core_la-hkl_compute.Tpo -c -o libclipper_core_la-hkl_compute.lo `test -f 'hkl_compute.cpp' || echo '$(srcdir)/'`hkl_compute.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libclipper_core_la-hkl_compute.Tpo $(DEPDIR)/libclipper_core_la-hkl_compute.Plo
#	$(AM_V_CXX)source='hkl_compute.cpp' object='libclipper_core_la-hkl_compute.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libclipper_core_la-hkl_compute.lo `test -f 'hkl_compute.cpp' || echo '$(srcdir)/'`hkl_compute.cpp

libclipper_core_la-resol_targetfn.lo: resol_targetfn.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libclipper_core_la-resol_targetfn.lo -MD -MP -MF $(DEPDIR)/libclipper_core_la-resol_targetfn.Tpo -c -o libclipper_core_la-resol_targetfn.lo `test -f 'resol_targetfn.cpp' || echo '$(srcdir)/'`resol_targetfn.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libclipper_core_la-resol_targetfn.Tpo $(DEPDIR)/libclipper_core_la-resol_targetfn.Plo
#	$(AM_V_CXX)source='resol_targetfn.cpp' object='libclipper_core_la-resol_targetfn.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libclipper_core_la-resol_targetfn.lo `test -f 'resol_targetfn.cpp' || echo '$(srcdir)/'`resol_targetfn.cpp

libclipper_core_la-clipper_stats.lo: clipper_stats.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libclipper_core_la-clipper_stats.lo -MD -MP -MF $(DEPDIR)/libclipper_core_la-clipper_stats.Tpo -c -o libclipper_core_la-clipper_stats.lo `test -f 'clipper_stats.cpp' || echo '$(srcdir)/'`clipper_stats.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libclipper_core_la-clipper_stats.Tpo $(DEPDIR)/libclipper_core_la-clipper_stats.Plo
#	$(AM_V_CXX)source='clipper_stats.cpp' object='libclipper_core_la-clipper_stats.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libclipper_core_la-clipper_stats.lo `test -f 'clipper_stats.cpp' || echo '$(srcdir)/'`clipper_stats.cpp

libclipper_core_la-hkl_data.lo: hkl_data.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libclipper_core_la-hkl_data.lo -MD -MP -MF $(DEPDIR)/libclipper_core_la-hkl_data.Tpo -c -o libclipper_core_la-hkl_data.lo `test -f 'hkl_data.cpp' || echo '$(srcdir)/'`hkl_data.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libclipper_core_la-hkl_data.Tpo $(DEPDIR)/libclipper_core_la-hkl_data.Plo
#	$(AM_V_CXX)source='hkl_data.cpp' object='libclipper_core_la-hkl_data.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libclipper_core_la-hkl_data.lo `test -f 'hkl_data.cpp' || echo '$(srcdir)/'`hkl_data.cpp

libclipper_core_la-rotation.lo: rotation.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libclipper_core_la-rotation.lo -MD -MP -MF $(DEPDIR)/libclipper_core_la-rotation.Tpo -c -o libclipper_core_la-rotation.lo `test -f 'rotation.cpp' || echo '$(srcdir)/'`rotation.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libclipper_core_la-rotation.Tpo $(DEPDIR)/libclipper_core_la-rotation.Plo
#	$(AM_V_CXX)source='rotation.cpp' object='libclipper_core_la-rotation.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libclipper_core_la-rotation.lo `test -f 'rotation.cpp' || echo '$(srcdir)/'`rotation.cpp

libclipper_core_la-clipper_test.lo: clipper_test.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libclipper_core_la-clipper_test.lo -MD -MP -MF $(DEPDIR)/libclipper_core_la-clipper_test.Tpo -c -o libclipper_core_la-clipper_test.lo `test -f 'clipper_test.cpp' || echo '$(srcdir)/'`clipper_test.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libclipper_core_la-clipper_test.Tpo $(DEPDIR)/libclipper_core_la-clipper_test.Plo
#	$(AM_V_CXX)source='clipper_test.cpp' object='libclipper_core_la-clipper_test.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libclipper_core_la-clipper_test.lo `test -f 'clipper_test.cpp' || echo '$(srcdir)/'`clipper_test.cpp

libclipper_core_la-hkl_datatypes.lo: hkl_datatypes.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libclipper_core_la-hkl_datatypes.lo -MD -MP -MF $(DEPDIR)/libclipper_core_la-hkl_datatypes.Tpo -c -o libclipper_core_la-hkl_datatypes.lo `test -f 'hkl_datatypes.cpp' || echo '$(srcdir)/'`hkl_datatypes.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libclipper_core_la-hkl_datatypes.Tpo $(DEPDIR)/libclipper_core_la-hkl_datatypes.Plo
#	$(AM_V_CXX)source='hkl_datatypes.cpp' object='libclipper_core_la-hkl_datatypes.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libclipper_core_la-hkl_datatypes.lo `test -f 'hkl_datatypes.cpp' || echo '$(srcdir)/'`hkl_datatypes.cpp

libclipper_core_la-spacegroup.lo: spacegroup.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libclipper_core_la-spacegroup.lo -MD -MP -MF $(DEPDIR)/libclipper_core_la-spacegroup.Tpo -c -o libclipper_core_la-spacegroup.lo `test -f 'spacegroup.cpp' || echo '$(srcdir)/'`spacegroup.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libclipper_core_la-spacegroup.Tpo $(DEPDIR)/libclipper_core_la-spacegroup.Plo
#	$(AM_V_CXX)source='spacegroup.cpp' object='libclipper_core_la-spacegroup.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libclipper_core_la-spacegroup.lo `test -f 'spacegroup.cpp' || echo '$(srcdir)/'`spacegroup.cpp

libclipper_core_la-clipper_types.lo: clipper_types.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libclipper_core_la-clipper_types.lo -MD -MP -MF $(DEPDIR)/libclipper_core_la-clipper_types.Tpo -c -o libclipper_core_la-clipper_types.lo `test -f 'clipper_types.cpp' || echo '$(srcdir)/'`clipper_types.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libclipper_core_la-clipper_types.Tpo $(DEPDIR)/libclipper_core_la-clipper_types.Plo
#	$(AM_V_CXX)source='clipper_types.cpp' object='libclipper_core_la-clipper_types.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libclipper_core_la-clipper_types.lo `test -f 'clipper_types.cpp' || echo '$(srcdir)/'`clipper_types.cpp

libclipper_core_la-hkl_info.lo: hkl_info.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libclipper_core_la-hkl_info.lo -MD -MP -MF $(DEPDIR)/libclipper_core_la-hkl_info.Tpo -c -o libclipper_core_la-hkl_info.lo `test -f 'hkl_info.cpp' || echo '$(srcdir)/'`hkl_info.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libclipper_core_la-hkl_info.Tpo $(DEPDIR)/libclipper_core_la-hkl_info.Plo
#	$(AM_V_CXX)source='hkl_info.cpp' object='libclipper_core_la-hkl_info.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libclipper_core_la-hkl_info.lo `test -f 'hkl_info.cpp' || echo '$(srcdir)/'`hkl_info.cpp

libclipper_core_la-spacegroup_data.lo: spacegroup_data.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libclipper_core_la-spacegroup_data.lo -MD -MP -MF $(DEPDIR)/libclipper_core_la-spacegroup_data.Tpo -c -o libclipper_core_la-spacegroup_data.lo `test -f 'spacegroup_data.cpp' || echo '$(srcdir)/'`spacegroup_data.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libclipper_core_la-spacegroup_data.Tpo $(DEPDIR)/libclipper_core_la-spacegroup_data.Plo
#	$(AM_V_CXX)source='spacegroup_data.cpp' object='libclipper_core_la-spacegroup_data.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libclipper_core_la-spacegroup_data.lo `test -f 'spacegroup_data.cpp' || echo '$(srcdir)/'`spacegroup_data.cpp

libclipper_core_la-clipper_util.lo: clipper_util.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libclipper_core_la-clipper_util.lo -MD -MP -MF $(DEPDIR)/libclipper_core_la-clipper_util.Tpo -c -o libclipper_core_la-clipper_util.lo `test -f 'clipper_util.cpp' || echo '$(srcdir)/'`clipper_util.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libclipper_core_la-clipper_util.Tpo $(DEPDIR)/libclipper_core_la-clipper_util.Plo
#	$(AM_V_CXX)source='clipper_util.cpp' object='libclipper_core_la-clipper_util.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libclipper_core_la-clipper_util.lo `test -f 'clipper_util.cpp' || echo '$(srcdir)/'`clipper_util.cpp

libclipper_core_la-hkl_lookup.lo: hkl_lookup.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libclipper_core_la-hkl_lookup.lo -MD -MP -MF $(DEPDIR)/libclipper_core_la-hkl_lookup.Tpo -c -o libclipper_core_la-hkl_lookup.lo `test -f 'hkl_lookup.cpp' || echo '$(srcdir)/'`hkl_lookup.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libclipper_core_la-hkl_lookup.Tpo $(DEPDIR)/libclipper_core_la-hkl_lookup.Plo
#	$(AM_V_CXX)source='hkl_lookup.cpp' object='libclipper_core_la-hkl_lookup.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libclipper_core_la-hkl_lookup.lo `test -f 'hkl_lookup.cpp' || echo '$(srcdir)/'`hkl_lookup.cpp

libclipper_core_la-symop.lo: symop.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libclipper_core_la-symop.lo -MD -MP -MF $(DEPDIR)/libclipper_core_la-symop.Tpo -c -o libclipper_core_la-symop.lo `test -f 'symop.cpp' || echo '$(srcdir)/'`symop.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libclipper_core_la-symop.Tpo $(DEPDIR)/libclipper_core_la-symop.Plo
#	$(AM_V_CXX)source='symop.cpp' object='libclipper_core_la-symop.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libclipper_core_la-symop.lo `test -f 'symop.cpp' || echo '$(srcdir)/'`symop.cpp

libclipper_core_la-container.lo: container.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libclipper_core_la-container.lo -MD -MP -MF $(DEPDIR)/libclipper_core_la-container.Tpo -c -o libclipper_core_la-container.lo `test -f 'container.cpp' || echo '$(srcdir)/'`container.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libclipper_core_la-container.Tpo $(DEPDIR)/libclipper_core_la-container.Plo
#	$(AM_V_CXX)source='container.cpp' object='libclipper_core_la-container.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libclipper_core_la-container.lo `test -f 'container.cpp' || echo '$(srcdir)/'`container.cpp

libclipper_core_la-hkl_operators.lo: hkl_operators.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libclipper_core_la-hkl_operators.lo -MD -MP -MF $(DEPDIR)/libclipper_core_la-hkl_operators.Tpo -c -o libclipper_core_la-hkl_operators.lo `test -f 'hkl_operators.cpp' || echo '$(srcdir)/'`hkl_operators.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libclipper_core_la-hkl_operators.Tpo $(DEPDIR)/libclipper_core_la-hkl_operators.Plo
#	$(AM_V_CXX)source='hkl_operators.cpp' object='libclipper_core_la-hkl_operators.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libclipper_core_la-hkl_operators.lo `test -f 'hkl_operators.cpp' || echo '$(srcdir)/'`hkl_operators.cpp

libclipper_core_la-container_hkl.lo: container_hkl.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libclipper_core_la-container_hkl.lo -MD -MP -MF $(DEPDIR)/libclipper_core_la-container_hkl.Tpo -c -o libclipper_core_la-container_hkl.lo `test -f 'container_hkl.cpp' || echo '$(srcdir)/'`container_hkl.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libclipper_core_la-container_hkl.Tpo $(DEPDIR)/libclipper_core_la-container_hkl.Plo
#	$(AM_V_CXX)source='container_hkl.cpp' object='libclipper_core_la-container_hkl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libclipper_core_la-container_hkl.lo `test -f 'container_hkl.cpp' || echo '$(srcdir)/'`container_hkl.cpp

libclipper_core_la-map_interp.lo: map_interp.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libclipper_core_la-map_interp.lo -MD -MP -MF $(DEPDIR)/libclipper_core_la-map_interp.Tpo -c -o libclipper_core_la-map_interp.lo `test -f 'map_interp.cpp' || echo '$(srcdir)/'`map_interp.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libclipper_core_la-map_interp.Tpo $(DEPDIR)/libclipper_core_la-map_interp.Plo
#	$(AM_V_CXX)source='map_interp.cpp' object='libclipper_core_la-map_interp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libclipper_core_la-map_interp.lo `test -f 'map_interp.cpp' || echo '$(srcdir)/'`map_interp.cpp

libclipper_core_la-container_map.lo: container_map.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libclipper_core_la-container_map.lo -MD -MP -MF $(DEPDIR)/libclipper_core_la-container_map.Tpo -c -o libclipper_core_la-container_map.lo `test -f 'container_map.cpp' || echo '$(srcdir)/'`container_map.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libclipper_core_la-container_map.Tpo $(DEPDIR)/libclipper_core_la-container_map.Plo
#	$(AM_V_CXX)source='container_map.cpp' object='libclipper_core_la-container_map.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libclipper_core_la-container_map.lo `test -f 'container_map.cpp' || echo '$(srcdir)/'`container_map.cpp

libclipper_core_la-map_utils.lo: map_utils.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libclipper_core_la-map_utils.lo -MD -MP -MF $(DEPDIR)/libclipper_core_la-map_utils.Tpo -c -o libclipper_core_la-map_utils.lo `test -f 'map_utils.cpp' || echo '$(srcdir)/'`map_utils.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libclipper_core_la-map_utils.Tpo $(DEPDIR)/libclipper_core_la-map_utils.Plo
#	$(AM_V_CXX)source='map_utils.cpp' object='libclipper_core_la-map_utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libclipper_core_la-map_utils.lo `test -f 'map_utils.cpp' || echo '$(srcdir)/'`map_utils.cpp

libclipper_core_la-xmap.lo: xmap.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libclipper_core_la-xmap.lo -MD -MP -MF $(DEPDIR)/libclipper_core_la-xmap.Tpo -c -o libclipper_core_la-xmap.lo `test -f 'xmap.cpp' || echo '$(srcdir)/'`xmap.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libclipper_core_la-xmap.Tpo $(DEPDIR)/libclipper_core_la-xmap.Plo
#	$(AM_V_CXX)source='xmap.cpp' object='libclipper_core_la-xmap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libclipper_core_la-xmap.lo `test -f 'xmap.cpp' || echo '$(srcdir)/'`xmap.cpp

libclipper_core_la-container_types.lo: container_types.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libclipper_core_la-container_types.lo -MD -MP -MF $(DEPDIR)/libclipper_core_la-container_types.Tpo -c -o libclipper_core_la-container_types.lo `test -f 'container_types.cpp' || echo '$(srcdir)/'`container_types.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libclipper_core_la-container_types.Tpo $(DEPDIR)/libclipper_core_la-container_types.Plo
#	$(AM_V_CXX)source='container_types.cpp' object='libclipper_core_la-container_types.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libclipper_core_la-container_types.lo `test -f 'container_types.cpp' || echo '$(srcdir)/'`container_types.cpp

libclipper_core_la-nxmap.lo: nxmap.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libclipper_core_la-nxmap.lo -MD -MP -MF $(DEPDIR)/libclipper_core_la-nxmap.Tpo -c -o libclipper_core_la-nxmap.lo `test -f 'nxmap.cpp' || echo '$(srcdir)/'`nxmap.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libclipper_core_la-nxmap.Tpo $(DEPDIR)/libclipper_core_la-nxmap.Plo
#	$(AM_V_CXX)source='nxmap.cpp' object='libclipper_core_la-nxmap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libclipper_core_la-nxmap.lo `test -f 'nxmap.cpp' || echo '$(srcdir)/'`nxmap.cpp

libclipper_core_la-clipper_thread.lo: clipper_thread.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libclipper_core_la-clipper_thread.lo -MD -MP -MF $(DEPDIR)/libclipper_core_la-clipper_thread.Tpo -c -o libclipper_core_la-clipper_thread.lo `test -f 'clipper_thread.cpp' || echo '$(srcdir)/'`clipper_thread.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libclipper_core_la-clipper_thread.Tpo $(DEPDIR)/libclipper_core_la-clipper_thread.Plo
#	$(AM_V_CXX)source='clipper_thread.cpp' object='libclipper_core_la-clipper_thread.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libclipper_core_la-clipper_thread.lo `test -f 'clipper_thread.cpp' || echo '$(srcdir)/'`clipper_thread.cpp

libclipper_core_la-test_core.lo: test_core.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libclipper_core_la-test_core.lo -MD -MP -MF $(DEPDIR)/libclipper_core_la-test_core.Tpo -c -o libclipper_core_la-test_core.lo `test -f 'test_core.cpp' || echo '$(srcdir)/'`test_core.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libclipper_core_la-test_core.Tpo $(DEPDIR)/libclipper_core_la-test_core.Plo
#	$(AM_V_CXX)source='test_core.cpp' object='libclipper_core_la-test_core.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libclipper_core_la-test_core.lo `test -f 'test_core.cpp' || echo '$(srcdir)/'`test_core.cpp

libclipper_core_la-test_data.lo: test_data.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libclipper_core_la-test_data.lo -MD -MP -MF $(DEPDIR)/libclipper_core_la-test_data.Tpo -c -o libclipper_core_la-test_data.lo `test -f 'test_data.cpp' || echo '$(srcdir)/'`test_data.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libclipper_core_la-test_data.Tpo $(DEPDIR)/libclipper_core_la-test_data.Plo
#	$(AM_V_CXX)source='test_data.cpp' object='libclipper_core_la-test_data.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libclipper_core_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libclipper_core_la-test_data.lo `test -f 'test_data.cpp' || echo '$(srcdir)/'`test_data.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-library_includeHEADERS: $(library_include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(library_include_HEADERS)'; test -n "$(library_includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(library_includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(library_includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(library_includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(library_includedir)" || exit $$?; \
	done

uninstall-library_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(library_include_HEADERS)'; test -n "$(library_includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(library_includedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(library_includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-library_includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES \
	uninstall-library_includeHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLTLIBRARIES \
	install-library_includeHEADERS install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-libLTLIBRARIES \
	uninstall-library_includeHEADERS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
